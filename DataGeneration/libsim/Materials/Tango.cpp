#include "Tango.h"

Tango::Tango()
{
}

void Tango::init(double G0, double K0)
{
    m_G0 = G0;
    m_K0 = K0;
}

Tango::~Tango()
{
}

double Tango::psi(const Matrix<double, 3, 3> &F) const
{
    VectorXd vF = F.reshaped();

    const double x0 = vF[0] * vF[5] * vF[7];
    const double x1 = vF[1] * vF[3] * vF[8];
    const double x2 = vF[2] * vF[4] * vF[6];
    const double x3 = -x0 - x1 - x2 + vF[0] * vF[4] * vF[8] + vF[1] * vF[5] * vF[6] + vF[2] * vF[3] * vF[7];

    double out;
    out = (1.0 / 2.0) * m_G0 * (-3 + (pow(vF[0], 2) + pow(vF[1], 2) + pow(vF[2], 2) + pow(vF[3], 2) + pow(vF[4], 2) + pow(vF[5], 2) + pow(vF[6], 2) + pow(vF[7], 2) + pow(vF[8], 2)) / pow(x3, 2.0 / 3.0)) + (1.0 / 2.0) * m_K0 * pow(-x0 - x1 - x2 + vF[0] * vF[4] * vF[8] + vF[1] * vF[5] * vF[6] + vF[2] * vF[3] * vF[7] - 1, 2) - log(x3);
    return out;
}

Matrix<double, 1, 9> Tango::dpsidF(const Matrix<double, 3, 3> &F) const
{
    VectorXd vF = F.reshaped();

    const double x0 = vF[4] * vF[8];
    const double x1 = vF[5] * vF[7];
    const double x2 = vF[5] * vF[6];
    const double x3 = vF[3] * vF[7];
    const double x4 = x1 * vF[0];
    const double x5 = vF[3] * vF[8];
    const double x6 = x5 * vF[1];
    const double x7 = vF[4] * vF[6];
    const double x8 = x7 * vF[2];
    const double x9 = x0 * vF[0] + x2 * vF[1] + x3 * vF[2] - x4 - x6 - x8;
    const double x10 = 1.0 / x9;
    const double x11 = (1.0 / 2.0) * m_K0 * (-x4 - x6 - x8 + vF[0] * vF[4] * vF[8] + vF[1] * vF[5] * vF[6] + vF[2] * vF[3] * vF[7] - 1);
    const double x12 = 2 / pow(x9, 2.0 / 3.0);
    const double x13 = (pow(vF[0], 2) + pow(vF[1], 2) + pow(vF[2], 2) + pow(vF[3], 2) + pow(vF[4], 2) + pow(vF[5], 2) + pow(vF[6], 2) + pow(vF[7], 2) + pow(vF[8], 2)) / pow(x9, 5.0 / 3.0);
    const double x14 = (1.0 / 2.0) * m_G0;
    const double x15 = vF[1] * vF[8];
    const double x16 = vF[0] * vF[8];
    const double x17 = vF[2] * vF[6];
    const double x18 = vF[0] * vF[7];
    const double x19 = vF[1] * vF[5];
    const double x20 = vF[2] * vF[4];
    const double x21 = vF[0] * vF[5];
    const double x22 = vF[0] * vF[4];
    const double x23 = vF[1] * vF[3];

    Matrix<double, 1, 9> out;
    out[0] = -x10 * (x0 - x1) + x11 * (2 * x0 - 2 * x1) + x14 * (x12 * vF[0] + x13 * (-2.0 / 3.0 * x0 + (2.0 / 3.0) * vF[5] * vF[7]));
    out[1] = -x10 * (-x5 + vF[5] * vF[6]) + x11 * (-2 * x5 + 2 * vF[5] * vF[6]) + x14 * (x12 * vF[1] + x13 * (-2.0 / 3.0 * x2 + (2.0 / 3.0) * x5));
    out[2] = -x10 * (x3 - x7) + x11 * (2 * x3 - 2 * x7) + x14 * (x12 * vF[2] + x13 * (-2.0 / 3.0 * x3 + (2.0 / 3.0) * vF[4] * vF[6]));
    out[3] = -x10 * (-x15 + vF[2] * vF[7]) + x11 * (-2 * x15 + 2 * vF[2] * vF[7]) + x14 * (x12 * vF[3] + x13 * ((2.0 / 3.0) * x15 - 2.0 / 3.0 * vF[2] * vF[7]));
    out[4] = -x10 * (x16 - x17) + x11 * (2 * x16 - 2 * x17) + x14 * (x12 * vF[4] + x13 * (-2.0 / 3.0 * x16 + (2.0 / 3.0) * vF[2] * vF[6]));
    out[5] = -x10 * (-x18 + vF[1] * vF[6]) + x11 * (-2 * x18 + 2 * vF[1] * vF[6]) + x14 * (x12 * vF[5] + x13 * ((2.0 / 3.0) * x18 - 2.0 / 3.0 * vF[1] * vF[6]));
    out[6] = -x10 * (x19 - x20) + x11 * (2 * x19 - 2 * x20) + x14 * (x12 * vF[6] + x13 * (-2.0 / 3.0 * x19 + (2.0 / 3.0) * vF[2] * vF[4]));
    out[7] = -x10 * (-x21 + vF[2] * vF[3]) + x11 * (-2 * x21 + 2 * vF[2] * vF[3]) + x14 * (x12 * vF[7] + x13 * ((2.0 / 3.0) * x21 - 2.0 / 3.0 * vF[2] * vF[3]));
    out[8] = -x10 * (x22 - x23) + x11 * (2 * x22 - 2 * x23) + x14 * (x12 * vF[8] + x13 * (-2.0 / 3.0 * x22 + (2.0 / 3.0) * vF[1] * vF[3]));

    return out;
}

Matrix<double, 9, 9> Tango::dpsidFF(const Matrix<double, 3, 3> &F) const
{
    VectorXd vF = F.reshaped();
    const double x0 = vF[4] * vF[8];
    const double x1 = vF[5] * vF[7];
    const double x2 = x0 - x1;
    const double x3 = (1.0 / 2.0) * m_K0;
    const double x4 = x3 * (2 * x0 - 2 * x1);
    const double x5 = vF[5] * vF[6];
    const double x6 = vF[3] * vF[7];
    const double x7 = x1 * vF[0];
    const double x8 = vF[3] * vF[8];
    const double x9 = x8 * vF[1];
    const double x10 = vF[4] * vF[6];
    const double x11 = x10 * vF[2];
    const double x12 = x0 * vF[0] - x11 + x5 * vF[1] + x6 * vF[2] - x7 - x9;
    const double x13 = pow(x12, -2);
    const double x14 = x13 * x2;
    const double x15 = 2 / pow(x12, 2.0 / 3.0);
    const double x16 = pow(x12, -5.0 / 3.0);
    const double x17 = -2.0 / 3.0 * x0 + (2.0 / 3.0) * vF[5] * vF[7];
    const double x18 = x16 * x17;
    const double x19 = pow(vF[0], 2) + pow(vF[1], 2) + pow(vF[2], 2) + pow(vF[3], 2) + pow(vF[4], 2) + pow(vF[5], 2) + pow(vF[6], 2) + pow(vF[7], 2) + pow(vF[8], 2);
    const double x20 = x19 / pow(x12, 8.0 / 3.0);
    const double x21 = x17 * x20;
    const double x22 = (1.0 / 2.0) * m_G0;
    const double x23 = x8 - vF[5] * vF[6];
    const double x24 = -x23;
    const double x25 = -2.0 / 3.0 * x5 + (2.0 / 3.0) * x8;
    const double x26 = x16 * x25;
    const double x27 = 2 * vF[0];
    const double x28 = 2 * x18;
    const double x29 = -5.0 / 3.0 * x5 + (5.0 / 3.0) * x8;
    const double x30 = -x14 * x23 + x22 * (x21 * x29 + x26 * x27 + x28 * vF[1]) + x24 * x4;
    const double x31 = -x10 + x6;
    const double x32 = -x31;
    const double x33 = -2.0 / 3.0 * x6 + (2.0 / 3.0) * vF[4] * vF[6];
    const double x34 = x16 * x27;
    const double x35 = -5.0 / 3.0 * x6 + (5.0 / 3.0) * vF[4] * vF[6];
    const double x36 = -x14 * x32 + x22 * (x21 * x35 + x28 * vF[2] + x33 * x34) + x31 * x4;
    const double x37 = vF[1] * vF[8];
    const double x38 = x37 - vF[2] * vF[7];
    const double x39 = -x38;
    const double x40 = vF[2] * vF[7];
    const double x41 = (2.0 / 3.0) * x37 - 2.0 / 3.0 * x40;
    const double x42 = (5.0 / 3.0) * x37 - 5.0 / 3.0 * x40;
    const double x43 = -x14 * x38 + x22 * (x21 * x42 + x28 * vF[3] + x34 * x41) + x39 * x4;
    const double x44 = vF[0] * vF[8];
    const double x45 = vF[2] * vF[6];
    const double x46 = x44 - x45;
    const double x47 = m_K0 * (-x11 - x7 - x9 + vF[0] * vF[4] * vF[8] + vF[1] * vF[5] * vF[6] + vF[2] * vF[3] * vF[7] - 1);
    const double x48 = x47 * vF[8];
    const double x49 = 1.0 / x12;
    const double x50 = x49 * vF[8];
    const double x51 = -x46;
    const double x52 = -2.0 / 3.0 * x44 + (2.0 / 3.0) * vF[2] * vF[6];
    const double x53 = x16 * vF[8];
    const double x54 = (2.0 / 3.0) * x19;
    const double x55 = x53 * x54;
    const double x56 = -5.0 / 3.0 * x44 + (5.0 / 3.0) * vF[2] * vF[6];
    const double x57 = -x14 * x51 + x22 * (x21 * x56 + x28 * vF[4] + x34 * x52 - x55) + x4 * x46 + x48 - x50;
    const double x58 = vF[0] * vF[7];
    const double x59 = x58 - vF[1] * vF[6];
    const double x60 = -x59;
    const double x61 = x49 * vF[7];
    const double x62 = x47 * vF[7];
    const double x63 = vF[1] * vF[6];
    const double x64 = (2.0 / 3.0) * x58 - 2.0 / 3.0 * x63;
    const double x65 = x16 * x54;
    const double x66 = x65 * vF[7];
    const double x67 = (5.0 / 3.0) * x58 - 5.0 / 3.0 * x63;
    const double x68 = -x14 * x59 + x22 * (x21 * x67 + x28 * vF[5] + x34 * x64 + x66) + x4 * x60 + x61 - x62;
    const double x69 = vF[1] * vF[5];
    const double x70 = vF[2] * vF[4];
    const double x71 = x69 - x70;
    const double x72 = -x71;
    const double x73 = -2.0 / 3.0 * x69 + (2.0 / 3.0) * vF[2] * vF[4];
    const double x74 = -5.0 / 3.0 * x69 + (5.0 / 3.0) * vF[2] * vF[4];
    const double x75 = -x14 * x72 + x22 * (x21 * x74 + x28 * vF[6] + x34 * x73) + x4 * x71;
    const double x76 = vF[0] * vF[5];
    const double x77 = x76 - vF[2] * vF[3];
    const double x78 = -x77;
    const double x79 = x49 * vF[5];
    const double x80 = x47 * vF[5];
    const double x81 = vF[2] * vF[3];
    const double x82 = (2.0 / 3.0) * x76 - 2.0 / 3.0 * x81;
    const double x83 = x65 * vF[5];
    const double x84 = (5.0 / 3.0) * x76 - 5.0 / 3.0 * x81;
    const double x85 = -x14 * x77 + x22 * (x21 * x84 + x28 * vF[7] + x34 * x82 + x83) + x4 * x78 + x79 - x80;
    const double x86 = vF[0] * vF[4];
    const double x87 = vF[1] * vF[3];
    const double x88 = x86 - x87;
    const double x89 = x47 * vF[4];
    const double x90 = x49 * vF[4];
    const double x91 = -x88;
    const double x92 = -2.0 / 3.0 * x86 + (2.0 / 3.0) * vF[1] * vF[3];
    const double x93 = x65 * vF[4];
    const double x94 = -5.0 / 3.0 * x86 + (5.0 / 3.0) * vF[1] * vF[3];
    const double x95 = -x14 * x91 + x22 * (x21 * x94 + x28 * vF[8] + x34 * x92 - x93) + x4 * x88 + x89 - x90;
    const double x96 = x3 * (-2 * x8 + 2 * vF[5] * vF[6]);
    const double x97 = x13 * x24;
    const double x98 = x20 * x25;
    const double x99 = x16 * x33;
    const double x100 = 2 * vF[1];
    const double x101 = 2 * x26;
    const double x102 = x22 * (x100 * x99 + x101 * vF[2] + x35 * x98) + x31 * x96 - x32 * x97;
    const double x103 = x100 * x16;
    const double x104 = x22 * (x101 * vF[3] + x103 * x41 + x42 * x98 + x55) - x38 * x97 + x39 * x96 - x48 + x50;
    const double x105 = x22 * (x101 * vF[4] + x103 * x52 + x56 * x98) + x46 * x96 - x51 * x97;
    const double x106 = x47 * vF[6];
    const double x107 = x49 * vF[6];
    const double x108 = x65 * vF[6];
    const double x109 = x106 - x107 + x22 * (x101 * vF[5] + x103 * x64 - x108 + x67 * x98) - x59 * x97 + x60 * x96;
    const double x110 = x22 * (x101 * vF[6] + x103 * x73 + x74 * x98 - x83) + x71 * x96 - x72 * x97 - x79 + x80;
    const double x111 = x22 * (x101 * vF[7] + x103 * x82 + x84 * x98) - x77 * x97 + x78 * x96;
    const double x112 = x49 * vF[3];
    const double x113 = x47 * vF[3];
    const double x114 = x65 * vF[3];
    const double x115 = x112 - x113 + x22 * (x101 * vF[8] + x103 * x92 + x114 + x94 * x98) + x88 * x96 - x91 * x97;
    const double x116 = x3 * (-2 * x10 + 2 * x6);
    const double x117 = x13 * x31;
    const double x118 = x20 * x33;
    const double x119 = x16 * x41;
    const double x120 = 2 * vF[2];
    const double x121 = 2 * x99;
    const double x122 = x116 * x39 - x117 * x38 + x22 * (x118 * x42 + x119 * x120 + x121 * vF[3] - x66) - x61 + x62;
    const double x123 = x120 * x16;
    const double x124 = -x106 + x107 + x116 * x46 - x117 * x51 + x22 * (x108 + x118 * x56 + x121 * vF[4] + x123 * x52);
    const double x125 = x116 * x60 - x117 * x59 + x22 * (x118 * x67 + x121 * vF[5] + x123 * x64);
    const double x126 = x116 * x71 - x117 * x72 + x22 * (x118 * x74 + x121 * vF[6] + x123 * x73 + x93) - x89 + x90;
    const double x127 = -x112 + x113 + x116 * x78 - x117 * x77 + x22 * (-x114 + x118 * x84 + x121 * vF[7] + x123 * x82);
    const double x128 = 2 * x53;
    const double x129 = x116 * x88 - x117 * x91 + x22 * (x118 * x94 + x123 * x92 + x128 * x33);
    const double x130 = x3 * (-2 * x37 + 2 * vF[2] * vF[7]);
    const double x131 = x13 * x39;
    const double x132 = x20 * x41;
    const double x133 = x16 * x52;
    const double x134 = 2 * vF[3];
    const double x135 = 2 * x119;
    const double x136 = x130 * x46 - x131 * x51 + x22 * (x132 * x56 + x133 * x134 + x135 * vF[4]);
    const double x137 = x134 * x16;
    const double x138 = x130 * x60 - x131 * x59 + x22 * (x132 * x67 + x135 * vF[5] + x137 * x64);
    const double x139 = x130 * x71 - x131 * x72 + x22 * (x132 * x74 + x135 * vF[6] + x137 * x73);
    const double x140 = x47 * vF[2];
    const double x141 = x49 * vF[2];
    const double x142 = x65 * vF[2];
    const double x143 = x130 * x78 - x131 * x77 + x140 - x141 + x22 * (x132 * x84 + x135 * vF[7] + x137 * x82 - x142);
    const double x144 = x49 * vF[1];
    const double x145 = x47 * vF[1];
    const double x146 = x65 * vF[1];
    const double x147 = x130 * x88 - x131 * x91 + x144 - x145 + x22 * (x128 * x41 + x132 * x94 + x137 * x92 + x146);
    const double x148 = x3 * (2 * x44 - 2 * x45);
    const double x149 = x13 * x46;
    const double x150 = x20 * x52;
    const double x151 = x16 * x64;
    const double x152 = 2 * vF[4];
    const double x153 = 2 * x133;
    const double x154 = x148 * x60 - x149 * x59 + x22 * (x150 * x67 + x151 * x152 + x153 * vF[5]);
    const double x155 = x152 * x16;
    const double x156 = -x140 + x141 + x148 * x71 - x149 * x72 + x22 * (x142 + x150 * x74 + x153 * vF[6] + x155 * x73);
    const double x157 = x148 * x78 - x149 * x77 + x22 * (x150 * x84 + x153 * vF[7] + x155 * x82);
    const double x158 = x47 * vF[0];
    const double x159 = x49 * vF[0];
    const double x160 = x65 * vF[0];
    const double x161 = x148 * x88 - x149 * x91 + x158 - x159 + x22 * (x128 * x52 + x150 * x94 + x155 * x92 - x160);
    const double x162 = x3 * (-2 * x58 + 2 * vF[1] * vF[6]);
    const double x163 = x13 * x60;
    const double x164 = x20 * x64;
    const double x165 = 2 * x151;
    const double x166 = x16 * x73;
    const double x167 = 2 * vF[5];
    const double x168 = -x144 + x145 + x162 * x71 - x163 * x72 + x22 * (-x146 + x164 * x74 + x165 * vF[6] + x166 * x167);
    const double x169 = x16 * x167;
    const double x170 = -x158 + x159 + x162 * x78 - x163 * x77 + x22 * (x160 + x164 * x84 + x165 * vF[7] + x169 * x82);
    const double x171 = x162 * x88 - x163 * x91 + x22 * (x128 * x64 + x164 * x94 + x169 * x92);
    const double x172 = x3 * (2 * x69 - 2 * x70);
    const double x173 = x13 * x71;
    const double x174 = x20 * x73;
    const double x175 = x16 * x82;
    const double x176 = 2 * vF[6];
    const double x177 = 2 * vF[7];
    const double x178 = x172 * x78 - x173 * x77 + x22 * (x166 * x177 + x174 * x84 + x175 * x176);
    const double x179 = x16 * x92;
    const double x180 = x172 * x88 - x173 * x91 + x22 * (x128 * x73 + x174 * x94 + x176 * x179);
    const double x181 = x3 * (-2 * x76 + 2 * vF[2] * vF[3]);
    const double x182 = x13 * x78;
    const double x183 = x20 * x82;
    const double x184 = x181 * x88 - x182 * x91 + x22 * (x128 * x82 + x177 * x179 + x183 * x94);

    Matrix<double, 9, 9> out;
    out(0, 0) = x14 * x2 + x2 * x4 + x22 * (x15 + 4 * x18 * vF[0] + x21 * (-5.0 / 3.0 * x0 + (5.0 / 3.0) * vF[5] * vF[7]));
    out(0, 1) = x30;
    out(0, 2) = x36;
    out(0, 3) = x43;
    out(0, 4) = x57;
    out(0, 5) = x68;
    out(0, 6) = x75;
    out(0, 7) = x85;
    out(0, 8) = x95;
    out(1, 0) = x30;
    out(1, 1) = x22 * (x15 + 4 * x26 * vF[1] + x29 * x98) - x23 * x97 + x24 * x96;
    out(1, 2) = x102;
    out(1, 3) = x104;
    out(1, 4) = x105;
    out(1, 5) = x109;
    out(1, 6) = x110;
    out(1, 7) = x111;
    out(1, 8) = x115;
    out(2, 0) = x36;
    out(2, 1) = x102;
    out(2, 2) = x116 * x31 - x117 * x32 + x22 * (x118 * x35 + x15 + 4 * x99 * vF[2]);
    out(2, 3) = x122;
    out(2, 4) = x124;
    out(2, 5) = x125;
    out(2, 6) = x126;
    out(2, 7) = x127;
    out(2, 8) = x129;
    out(3, 0) = x43;
    out(3, 1) = x104;
    out(3, 2) = x122;
    out(3, 3) = x130 * x39 - x131 * x38 + x22 * (4 * x119 * vF[3] + x132 * x42 + x15);
    out(3, 4) = x136;
    out(3, 5) = x138;
    out(3, 6) = x139;
    out(3, 7) = x143;
    out(3, 8) = x147;
    out(4, 0) = x57;
    out(4, 1) = x105;
    out(4, 2) = x124;
    out(4, 3) = x136;
    out(4, 4) = x148 * x46 - x149 * x51 + x22 * (4 * x133 * vF[4] + x15 + x150 * x56);
    out(4, 5) = x154;
    out(4, 6) = x156;
    out(4, 7) = x157;
    out(4, 8) = x161;
    out(5, 0) = x68;
    out(5, 1) = x109;
    out(5, 2) = x125;
    out(5, 3) = x138;
    out(5, 4) = x154;
    out(5, 5) = x162 * x60 - x163 * x59 + x22 * (x15 + 4 * x151 * vF[5] + x164 * x67);
    out(5, 6) = x168;
    out(5, 7) = x170;
    out(5, 8) = x171;
    out(6, 0) = x75;
    out(6, 1) = x110;
    out(6, 2) = x126;
    out(6, 3) = x139;
    out(6, 4) = x156;
    out(6, 5) = x168;
    out(6, 6) = x172 * x71 - x173 * x72 + x22 * (x15 + 4 * x166 * vF[6] + x174 * x74);
    out(6, 7) = x178;
    out(6, 8) = x180;
    out(7, 0) = x85;
    out(7, 1) = x111;
    out(7, 2) = x127;
    out(7, 3) = x143;
    out(7, 4) = x157;
    out(7, 5) = x170;
    out(7, 6) = x178;
    out(7, 7) = x181 * x78 - x182 * x77 + x22 * (x15 + 4 * x175 * vF[7] + x183 * x84);
    out(7, 8) = x184;
    out(8, 0) = x95;
    out(8, 1) = x115;
    out(8, 2) = x129;
    out(8, 3) = x147;
    out(8, 4) = x161;
    out(8, 5) = x171;
    out(8, 6) = x180;
    out(8, 7) = x184;
    out(8, 8) = -x13 * x88 * x91 + x22 * (x15 + x20 * x92 * x94 + 4 * x53 * x92) + x3 * x88 * (2 * x86 - 2 * x87);

    return out;
}
