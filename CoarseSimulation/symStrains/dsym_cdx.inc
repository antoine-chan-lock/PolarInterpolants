void dsym_cdx(double epsilon, const VectorXd& vXrest, const VectorXd& vx, VectorXd& out) {
    const double x0 = -vx[0] + vx[6];
    const double x1 = vXrest[1] - vXrest[3];
    const double x2 = vXrest[0]*vXrest[3] - vXrest[0]*vXrest[5] - vXrest[1]*vXrest[2] + vXrest[1]*vXrest[4] + vXrest[2]*vXrest[5] - vXrest[3]*vXrest[4];
    const double x3 = 1.0/x2;
    const double x4 = x1*x3;
    const double x5 = -vx[0] + vx[3];
    const double x6 = vXrest[1] - vXrest[5];
    const double x7 = -1/x2;
    const double x8 = x6*x7;
    const double x9 = x0*x4 + x5*x8;
    const double x10 = pow(x9, 2);
    const double x11 = -vx[1] + vx[7];
    const double x12 = -vx[1] + vx[4];
    const double x13 = x11*x4 + x12*x8;
    const double x14 = pow(x13, 2);
    const double x15 = -vx[2] + vx[8];
    const double x16 = -vx[2] + vx[5];
    const double x17 = x15*x4 + x16*x8;
    const double x18 = pow(x17, 2);
    const double x19 = x3*(-vXrest[0] + vXrest[2]);
    const double x20 = x7*(-vXrest[0] + vXrest[4]);
    const double x21 = x0*x19 + x20*x5;
    const double x22 = x11*x19 + x12*x20;
    const double x23 = x15*x19 + x16*x20;
    const double x24 = x13*x22 + x17*x23 + x21*x9;
    const double x25 = (1.0/2.0)*pow(x21, 2) + (1.0/2.0)*pow(x22, 2) + (1.0/2.0)*pow(x23, 2);
    const double x26 = (1.0/2.0)*x10 + (1.0/2.0)*x14 + (1.0/2.0)*x18 - x25;
    const double x27 = sqrt(epsilon + pow(x24, 2) + pow(x26, 2));
    const double x28 = pow((1.0/2.0)*x10 + (1.0/2.0)*x14 + (1.0/2.0)*x18 + x25 - x27, -1.0/2.0);
    const double x29 = 2*x19;
    const double x30 = 2*x20;
    const double x31 = -x29 - x30;
    const double x32 = x21*x31;
    const double x33 = 2*x4;
    const double x34 = 2*x8;
    const double x35 = -x33 - x34;
    const double x36 = -2*x19 - 2*x20;
    const double x37 = -2*x4 - 2*x8;
    const double x38 = (1.0/2.0)*x24;
    const double x39 = (1.0/2.0)*x26;
    const double x40 = (1.0/2.0)/x27;
    const double x41 = x22*x31;
    const double x42 = x23*x31;
    const double x43 = (1.0/2.0)*x20;
    const double x44 = (1.0/2.0)*x8;
    const double x45 = (1.0/2.0)*x19;
    const double x46 = (1.0/2.0)*x4;

    out.resize(18);
    out[0] = -x28*((1.0/4.0)*x32 + (1.0/4.0)*x35*x9 - x40*(x38*(x21*x37 + x36*x9) + x39*(-x32 + x35*x9)));
    out[1] = -x28*((1.0/4.0)*x13*x35 - x40*(x38*(x13*x36 + x22*x37) + x39*(x13*x35 - x41)) + (1.0/4.0)*x41);
    out[2] = -x28*((1.0/4.0)*x17*x35 - x40*(x38*(x17*x36 + x23*x37) + x39*(x17*x35 - x42)) + (1.0/4.0)*x42);
    out[3] = -x28*(x21*x43 - x40*(x38*(x21*x34 + x30*x9) + x39*(-x21*x30 + 2*x6*x7*x9)) + x44*x9);
    out[4] = -x28*(x13*x44 + x22*x43 - x40*(x38*(x13*x30 + x22*x34) + x39*(2*x13*x6*x7 - x22*x30)));
    out[5] = -x28*(x17*x44 + x23*x43 - x40*(x38*(x17*x30 + x23*x34) + x39*(2*x17*x6*x7 - x23*x30)));
    out[6] = -x28*(x21*x45 - x40*(x38*(x21*x33 + x29*x9) + x39*(2*x1*x3*x9 - x21*x29)) + x46*x9);
    out[7] = -x28*(x13*x46 + x22*x45 - x40*(x38*(x13*x29 + x22*x33) + x39*(2*x1*x13*x3 - x22*x29)));
    out[8] = -x28*(x17*x46 + x23*x45 - x40*(x38*(x17*x29 + x23*x33) + x39*(2*x1*x17*x3 - x23*x29)));
    out[9] = 0;
    out[10] = 0;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 0;
    out[16] = 0;
    out[17] = 0;

}
