double sym_d(double epsilon, const VectorXd& vXrest, const VectorXd& vexist, const VectorXd& vx) {
    const double x0 = -vx[6];
    const double x1 = x0 + vx[0];
    const double x2 = -x1;
    const double x3 = vx[0] - vx[3];
    const double x4 = -x3;
    const double x5 = -vx[7];
    const double x6 = x5 + vx[1];
    const double x7 = -x6;
    const double x8 = vx[1] - vx[4];
    const double x9 = -x8;
    const double x10 = -x2*x9 + x4*x7;
    const double x11 = -x10;
    const double x12 = -vx[8];
    const double x13 = x12 + vx[2];
    const double x14 = -x13;
    const double x15 = vx[2] - vx[5];
    const double x16 = -x15;
    const double x17 = x14*x9 - x16*x7;
    const double x18 = -x17;
    const double x19 = x11*x2 - x14*x18;
    const double x20 = vXrest[0]*vXrest[3] - vXrest[0]*vXrest[5] - vXrest[1]*vXrest[2] + vXrest[1]*vXrest[4] + vXrest[2]*vXrest[5] - vXrest[3]*vXrest[4];
    const double x21 = (vXrest[1] - vXrest[3])/x20;
    const double x22 = -(vXrest[1] - vXrest[5])/x20;
    const double x23 = x21*x7 + x22*x9;
    const double x24 = x2*x21 + x22*x4;
    const double x25 = x14*x21 + x16*x22;
    const double x26 = pow(pow(x23, 2) + pow(x24, 2) + pow(x25, 2), -1.0/2.0);
    const double x27 = x23*x26;
    const double x28 = x14*x4 - x16*x2;
    const double x29 = -x11*x7 + x14*x28;
    const double x30 = x24*x26;
    const double x31 = x18*x7 - x2*x28;
    const double x32 = x25*x26;
    const double x33 = x19*x27 + x29*x30 + x31*x32;
    const double x34 = pow(pow(x14, 2) + pow(x2, 2) + pow(x7, 2), -1.0/2.0);
    const double x35 = -x28;
    const double x36 = pow(pow(x10, 2) + pow(x17, 2) + pow(x35, 2), -3.0/2.0);
    const double x37 = -vx[8] + vx[17];
    const double x38 = -vx[6] + vx[15];
    const double x39 = x1*x37 - x13*x38;
    const double x40 = -vx[7] + vx[16];
    const double x41 = -x1*x40 + x38*x6;
    const double x42 = x13*x40 - x37*x6;
    const double x43 = x34*x36*atan2(x14*x34*(x17*x39 - x35*x42) + x2*x34*(-x10*x39 + x35*x41) + x34*x7*(x10*x42 - x17*x41), x10*x41 + x17*x42 + x35*x39)*vexist[2];
    const double x44 = pow(x33, 2)*x43;
    const double x45 = x11*x3 - x15*x18;
    const double x46 = -x11*x8 + x15*x28;
    const double x47 = x18*x8 - x28*x3;
    const double x48 = x27*x45 + x30*x46 + x32*x47;
    const double x49 = pow(pow(x15, 2) + pow(x3, 2) + pow(x8, 2), -1.0/2.0);
    const double x50 = -vx[2] + vx[11];
    const double x51 = -vx[0] + vx[9];
    const double x52 = -x16*x51 + x4*x50;
    const double x53 = -vx[1] + vx[10];
    const double x54 = -x4*x53 + x51*x9;
    const double x55 = x16*x53 - x50*x9;
    const double x56 = x36*x49*atan2(x15*x49*(x17*x52 - x35*x55) + x3*x49*(-x10*x52 + x35*x54) + x49*x8*(x10*x55 - x17*x54), x10*x54 + x17*x55 + x35*x52)*vexist[0];
    const double x57 = pow(x48, 2)*x56;
    const double x58 = x0 + vx[3];
    const double x59 = x12 + vx[5];
    const double x60 = x11*x58 - x18*x59;
    const double x61 = x5 + vx[4];
    const double x62 = -x11*x61 + x28*x59;
    const double x63 = x18*x61 - x28*x58;
    const double x64 = x27*x60 + x30*x62 + x32*x63;
    const double x65 = pow(pow(x58, 2) + pow(x59, 2) + pow(x61, 2), -1.0/2.0);
    const double x66 = -x58;
    const double x67 = -vx[5] + vx[14];
    const double x68 = -vx[3] + vx[12];
    const double x69 = -x59;
    const double x70 = x66*x67 - x68*x69;
    const double x71 = -vx[4] + vx[13];
    const double x72 = -x61;
    const double x73 = -x66*x71 + x68*x72;
    const double x74 = -x67*x72 + x69*x71;
    const double x75 = x36*x65*atan2(x58*x65*(-x10*x70 + x35*x73) + x59*x65*(x17*x70 - x35*x74) + x61*x65*(x10*x74 - x17*x73), x10*x73 + x17*x74 + x35*x70)*vexist[1];
    const double x76 = pow(x64, 2)*x75;
    const double x77 = x10*x24 - x17*x25;
    const double x78 = -x10*x23 + x25*x35;
    const double x79 = x17*x23 - x24*x35;
    const double x80 = pow(pow(x77, 2) + pow(x78, 2) + pow(x79, 2), -1.0/2.0);
    const double x81 = x77*x80;
    const double x82 = x78*x80;
    const double x83 = x79*x80;
    const double x84 = x19*x81 + x29*x82 + x31*x83;
    const double x85 = x43*pow(x84, 2);
    const double x86 = x45*x81 + x46*x82 + x47*x83;
    const double x87 = x56*pow(x86, 2);
    const double x88 = x60*x81 + x62*x82 + x63*x83;
    const double x89 = x75*pow(x88, 2);
    const double x90 = -x44 - x57 - x76 + x85 + x87 + x89 <= 0;
    const double x91 = x33*x43*x84;
    const double x92 = x48*x56*x86;
    const double x93 = x64*x75*x88;
    const double x94 = x91 + x92 + x93;
    const double x95 = (1.0/2.0)*x44;
    const double x96 = (1.0/2.0)*x57;
    const double x97 = (1.0/2.0)*x76;
    const double x98 = (1.0/2.0)*x85;
    const double x99 = (1.0/2.0)*x87;
    const double x100 = (1.0/2.0)*x89;
    const double x101 = x100 - x95 - x96 - x97 + x98 + x99;
    const double x102 = sqrt(epsilon + pow(x101, 2) + pow(x94, 2));
    const double x103 = x101 + x102;
    const double x104 = ((x90) ? (
        1.0*x91 + 1.0*x92 + 1.0*x93 < 0
    )
    : (
        x103 < 0
    )) ? -1.0 : 1.0;
    const double x105 = x90 ? 1.0 : 0.0;
    const double x106 = 1 - x105;

    double out;
    out = atan2(x104*(x103*x106 + x105*x94), x104*(x105*(-x100 + x102 + x95 + x96 + x97 - x98 - x99) + x106*x94));
    return out;

}
