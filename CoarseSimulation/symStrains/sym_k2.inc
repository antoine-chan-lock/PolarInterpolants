double sym_k2(double epsilon, const VectorXd& vXrest, const VectorXd& vexist, const VectorXd& vx) {
    const double x0 = -vx[6];
    const double x1 = x0 + vx[0];
    const double x2 = -x1;
    const double x3 = vx[0] - vx[3];
    const double x4 = -x3;
    const double x5 = -vx[7];
    const double x6 = x5 + vx[1];
    const double x7 = -x6;
    const double x8 = vx[1] - vx[4];
    const double x9 = -x8;
    const double x10 = -x2*x9 + x4*x7;
    const double x11 = -x10;
    const double x12 = -vx[8];
    const double x13 = x12 + vx[2];
    const double x14 = -x13;
    const double x15 = vx[2] - vx[5];
    const double x16 = -x15;
    const double x17 = x14*x9 - x16*x7;
    const double x18 = -x17;
    const double x19 = x11*x2 - x14*x18;
    const double x20 = vXrest[0]*vXrest[3] - vXrest[0]*vXrest[5] - vXrest[1]*vXrest[2] + vXrest[1]*vXrest[4] + vXrest[2]*vXrest[5] - vXrest[3]*vXrest[4];
    const double x21 = (vXrest[1] - vXrest[3])/x20;
    const double x22 = -(vXrest[1] - vXrest[5])/x20;
    const double x23 = x2*x21 + x22*x4;
    const double x24 = x14*x21 + x16*x22;
    const double x25 = x10*x23 - x17*x24;
    const double x26 = x21*x7 + x22*x9;
    const double x27 = x14*x4 - x16*x2;
    const double x28 = -x27;
    const double x29 = -x10*x26 + x24*x28;
    const double x30 = x17*x26 - x23*x28;
    const double x31 = pow(pow(x25, 2) + pow(x29, 2) + pow(x30, 2), -1.0/2.0);
    const double x32 = x25*x31;
    const double x33 = -x11*x7 + x14*x27;
    const double x34 = x29*x31;
    const double x35 = x18*x7 - x2*x27;
    const double x36 = x30*x31;
    const double x37 = x19*x32 + x33*x34 + x35*x36;
    const double x38 = pow(pow(x23, 2) + pow(x24, 2) + pow(x26, 2), -1.0/2.0);
    const double x39 = x26*x38;
    const double x40 = x23*x38;
    const double x41 = x24*x38;
    const double x42 = x19*x39 + x33*x40 + x35*x41;
    const double x43 = pow(pow(x14, 2) + pow(x2, 2) + pow(x7, 2), -1.0/2.0);
    const double x44 = pow(pow(x10, 2) + pow(x17, 2) + pow(x28, 2), -3.0/2.0);
    const double x45 = -vx[8] + vx[17];
    const double x46 = -vx[6] + vx[15];
    const double x47 = x1*x45 - x13*x46;
    const double x48 = -vx[7] + vx[16];
    const double x49 = -x1*x48 + x46*x6;
    const double x50 = x13*x48 - x45*x6;
    const double x51 = atan2(x14*x43*(x17*x47 - x28*x50) + x2*x43*(-x10*x47 + x28*x49) + x43*x7*(x10*x50 - x17*x49), x10*x49 + x17*x50 + x28*x47);
    const double x52 = x43*x44*x51*vexist[2];
    const double x53 = x11*x3 - x15*x18;
    const double x54 = -x11*x8 + x15*x27;
    const double x55 = x18*x8 - x27*x3;
    const double x56 = x32*x53 + x34*x54 + x36*x55;
    const double x57 = x39*x53 + x40*x54 + x41*x55;
    const double x58 = pow(pow(x15, 2) + pow(x3, 2) + pow(x8, 2), -1.0/2.0);
    const double x59 = -vx[2] + vx[11];
    const double x60 = -vx[0] + vx[9];
    const double x61 = -x16*x60 + x4*x59;
    const double x62 = -vx[1] + vx[10];
    const double x63 = -x4*x62 + x60*x9;
    const double x64 = x16*x62 - x59*x9;
    const double x65 = atan2(x15*x58*(x17*x61 - x28*x64) + x3*x58*(-x10*x61 + x28*x63) + x58*x8*(x10*x64 - x17*x63), x10*x63 + x17*x64 + x28*x61);
    const double x66 = x44*x58*x65*vexist[0];
    const double x67 = x0 + vx[3];
    const double x68 = x12 + vx[5];
    const double x69 = x11*x67 - x18*x68;
    const double x70 = x5 + vx[4];
    const double x71 = -x11*x70 + x27*x68;
    const double x72 = x18*x70 - x27*x67;
    const double x73 = x32*x69 + x34*x71 + x36*x72;
    const double x74 = x39*x69 + x40*x71 + x41*x72;
    const double x75 = pow(pow(x67, 2) + pow(x68, 2) + pow(x70, 2), -1.0/2.0);
    const double x76 = -x67;
    const double x77 = -vx[5] + vx[14];
    const double x78 = -vx[3] + vx[12];
    const double x79 = -x68;
    const double x80 = x76*x77 - x78*x79;
    const double x81 = -vx[4] + vx[13];
    const double x82 = -x70;
    const double x83 = -x76*x81 + x78*x82;
    const double x84 = -x77*x82 + x79*x81;
    const double x85 = atan2(x67*x75*(-x10*x80 + x28*x83) + x68*x75*(x17*x80 - x28*x84) + x70*x75*(x10*x84 - x17*x83), x10*x83 + x17*x84 + x28*x80);
    const double x86 = x44*x75*x85*vexist[1];
    const double x87 = pow(x42, 2);
    const double x88 = pow(x57, 2);
    const double x89 = pow(x74, 2);
    const double x90 = (1.0/2.0)*x52;
    const double x91 = (1.0/2.0)*x66;
    const double x92 = (1.0/2.0)*x86;
    const double x93 = pow(x37, 2)*x90 + pow(x56, 2)*x91 + pow(x73, 2)*x92;

    double out;
    out = x87*x90 + x88*x91 + x89*x92 + x93 - sqrt(epsilon + pow(x37*x42*x52 + x56*x57*x66 + x73*x74*x86, 2) + pow((1.0/2.0)*x43*x44*x51*x87*vexist[2] + (1.0/2.0)*x44*x58*x65*x88*vexist[0] + (1.0/2.0)*x44*x75*x85*x89*vexist[1] - x93, 2));
    return out;

}
