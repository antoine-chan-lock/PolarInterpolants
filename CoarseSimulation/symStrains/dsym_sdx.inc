void dsym_sdx(double epsilon, const VectorXd& vXrest, const VectorXd& vx, VectorXd& out) {
    const double x0 = -vx[0] + vx[6];
    const double x1 = vXrest[0]*vXrest[3] - vXrest[0]*vXrest[5] - vXrest[1]*vXrest[2] + vXrest[1]*vXrest[4] + vXrest[2]*vXrest[5] - vXrest[3]*vXrest[4];
    const double x2 = 1.0/x1;
    const double x3 = x2*(-vXrest[0] + vXrest[2]);
    const double x4 = -vx[0] + vx[3];
    const double x5 = -1/x1;
    const double x6 = x5*(-vXrest[0] + vXrest[4]);
    const double x7 = x0*x3 + x4*x6;
    const double x8 = vXrest[1] - vXrest[3];
    const double x9 = x2*x8;
    const double x10 = vXrest[1] - vXrest[5];
    const double x11 = x10*x5;
    const double x12 = x0*x9 + x11*x4;
    const double x13 = -vx[1] + vx[7];
    const double x14 = -vx[1] + vx[4];
    const double x15 = x13*x3 + x14*x6;
    const double x16 = x11*x14 + x13*x9;
    const double x17 = -vx[2] + vx[8];
    const double x18 = -vx[2] + vx[5];
    const double x19 = x17*x3 + x18*x6;
    const double x20 = x11*x18 + x17*x9;
    const double x21 = x12*x7 + x15*x16 + x19*x20;
    const double x22 = pow(x12, 2);
    const double x23 = pow(x16, 2);
    const double x24 = pow(x20, 2);
    const double x25 = (1.0/2.0)*pow(x15, 2) + (1.0/2.0)*pow(x19, 2) + (1.0/2.0)*pow(x7, 2);
    const double x26 = (1.0/2.0)*x22 + (1.0/2.0)*x23 + (1.0/2.0)*x24 - x25;
    const double x27 = sqrt(epsilon + pow(x21, 2) + pow(x26, 2));
    const double x28 = pow((1.0/2.0)*x22 + (1.0/2.0)*x23 + (1.0/2.0)*x24 + x25 + x27, -1.0/2.0);
    const double x29 = 2*x3;
    const double x30 = 2*x6;
    const double x31 = -x29 - x30;
    const double x32 = x31*x7;
    const double x33 = 2*x9;
    const double x34 = 2*x11;
    const double x35 = -x33 - x34;
    const double x36 = -2*x3 - 2*x6;
    const double x37 = -2*x11 - 2*x9;
    const double x38 = (1.0/2.0)*x21;
    const double x39 = (1.0/2.0)*x26;
    const double x40 = (1.0/2.0)/x27;
    const double x41 = x15*x31;
    const double x42 = x19*x31;
    const double x43 = (1.0/2.0)*x6;
    const double x44 = (1.0/2.0)*x11;
    const double x45 = (1.0/2.0)*x3;
    const double x46 = (1.0/2.0)*x9;

    out.resize(18);
    out[0] = x28*((1.0/4.0)*x12*x35 + (1.0/4.0)*x32 + x40*(x38*(x12*x36 + x37*x7) + x39*(x12*x35 - x32)));
    out[1] = x28*((1.0/4.0)*x16*x35 + x40*(x38*(x15*x37 + x16*x36) + x39*(x16*x35 - x41)) + (1.0/4.0)*x41);
    out[2] = x28*((1.0/4.0)*x20*x35 + x40*(x38*(x19*x37 + x20*x36) + x39*(x20*x35 - x42)) + (1.0/4.0)*x42);
    out[3] = x28*(x12*x44 + x40*(x38*(x12*x30 + x34*x7) + x39*(2*x10*x12*x5 - x30*x7)) + x43*x7);
    out[4] = x28*(x15*x43 + x16*x44 + x40*(x38*(x15*x34 + x16*x30) + x39*(2*x10*x16*x5 - x15*x30)));
    out[5] = x28*(x19*x43 + x20*x44 + x40*(x38*(x19*x34 + x20*x30) + x39*(2*x10*x20*x5 - x19*x30)));
    out[6] = x28*(x12*x46 + x40*(x38*(x12*x29 + x33*x7) + x39*(2*x12*x2*x8 - x29*x7)) + x45*x7);
    out[7] = x28*(x15*x45 + x16*x46 + x40*(x38*(x15*x33 + x16*x29) + x39*(-x15*x29 + 2*x16*x2*x8)));
    out[8] = x28*(x19*x45 + x20*x46 + x40*(x38*(x19*x33 + x20*x29) + x39*(-x19*x29 + 2*x2*x20*x8)));
    out[9] = 0;
    out[10] = 0;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 0;
    out[16] = 0;
    out[17] = 0;

}
